aliases:
  - &setup-heroku
    name: Setup Heroku
    command: bash .circleci/setup-heroku.sh $HEROKU_APP

  - &setup-heroku-and-commit
    name: Setup Branch and Commit
    command: bash .circleci/setup-branch-and-commit.sh heroku-$HEROKU_APP

  - &deploy-to-heroku
    name: Deploy to Heroku
    command: |
      git push heroku heroku-$HEROKU_APP:master -f
      heroku run rake db:migrate
      sleep 5
      heroku restart

  - &filter-dev-branch
    branches:
      ignore:
        - release

  - &filter-master-branch
    branches:
      only:
        - master

  - &filter-release-branch
    branches:
      only:
        - release

defaults: &defaults
  working_directory: ~/backend # directory where steps will run
  docker:
    - image: circleci/node:8.11

version: 2
jobs:
  test:                              # runs not using Workflows must have a `build` job as entry point
    <<: *defaults
    steps:                            # a collection of executable commands
      - checkout                      # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-          # fallback to using the latest cache if no exact match is found
      - run:
          name: install-dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: test
          command: npm test
  #      - run:
  #          name: code-coverage
  #          command: '../node_modules/.bin/nyc report --reporter=text-lcov'
  #      - store_artifacts: # special step to save test results as as artifact
  #          path: test-results.xml
  #          prefix: tests
  #      - store_artifacts:
  #          path: coverage
  #          prefix: coverage
  #      - store_test_results: # special step to upload test results for display in Test Summary
  #          path: test-results.xml

  dev-deploy:
    <<: *defaults
    environment:
      - HEROKU_APP : dionysus-alarm-backend-dev
    steps:
      - checkout
#      - run:
#          name: Copy firebase-service-account.json
#          command: echo $FIREBASE_SERVICE_ACCOUNT_DEV | base64 --decode > firebase-service-account.json
      - run: *setup-heroku
      - run: *setup-heroku-and-commit
      - run: *deploy-to-heroku

  stg-deploy:
    <<: *defaults
    environment:
      - HEROKU_APP: dionysus-alarm-backend-stg
    steps:
      - checkout
#      - run:
#          name: Copy firebase-service-account.json
#          command: echo $FIREBASE_SERVICE_ACCOUNT_DEV | base64 --decode > firebase-service-account.json
      - run: *setup-heroku
      - run: *setup-heroku-and-commit
      - run: *deploy-to-heroku

  prd-deploy:
    <<: *defaults
    environment:
      - HEROKU_APP: dionysus-alarm-backend
    steps:
      - checkout
#      - run:
#          name: Copy firebase-service-account.json
#          command: echo $FIREBASE_SERVICE_ACCOUNT | base64 --decode > firebase-service-account.json
      - run: *setup-heroku
      - run: *setup-heroku-and-commit
      - run: *deploy-to-heroku

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - dev-deploy:
          filters: *filter-dev-branch
      - stg-deploy:
          requires:
            - dev-deploy
          filters: *filter-master-branch
      - prd-deploy:
          filters: *filter-release-branch
